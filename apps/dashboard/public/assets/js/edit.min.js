//
// edit.min.js
//

'use strict';


//
// General Settings ===========================
//

$(function(){
  $("a[rel=external]").attr("target", "_blank");
});

//
// Theme ===========================
//

var Theme = function() {
  var a, e, t, o, r, l, n = document.querySelector("#themeForm"),
  s = document.querySelector("#topnav"),
  i = document.querySelector("#topbar"),
  c = document.querySelector("#sidebar"),
  d = document.querySelector("#sidebarUser"),
  u = document.querySelectorAll('[class^="container"]'),
  p = (document.querySelectorAll("#stylesheetLight, #stylesheetDark"), document.querySelector("#stylesheetLight")),
  h = document.querySelector("#stylesheetDark"),
  b = {
    colorScheme: localStorage.getItem("dashkitColorScheme") ? localStorage.getItem("dashkitColorScheme") : "light",
    navPosition: localStorage.getItem("dashkitNavPosition") ? localStorage.getItem("dashkitNavPosition") : "combo",
    sidebarColor: localStorage.getItem("dashkitSidebarColor") ? localStorage.getItem("dashkitSidebarColor") : "default"
  };
  !function() {
    for (var a = window.location.search.substring(1).split("&"), e = 0; e < a.length; e++) {
      var t = a[e].split("="),
      o = t[0],
      r = t[1];
      "colorScheme" != o && "navPosition" != o && "sidebarColor" != o || (localStorage.setItem("dashkit" + o.charAt(0).toUpperCase() + o.slice(1), r), b[o] = r)
    }
  }(), "light" == (a = b.colorScheme) ? (p.disabled = !1, h.disabled = !0, $("body").attr("id", "lightTheme")) : "dark" == a && (p.disabled = !0, h.disabled = !1, $("body").attr("id", "darkTheme")),
  function(a) {
    if (s && i && c && d) {
      if ("topnav" == a) {
        t(i), t(c);
        for (var e = 0; e < u.length; e++) u[e].classList.remove("container-fluid"), u[e].classList.add("container")
      }
      else if ("combo" == a) {
        for (t(s), t(d), e = 0; e < u.length; e++) u[e].classList.remove("container"), u[e].classList.add("container-fluid");
      }
      else if ("sidenav" == a) {
        for (t(s), t(i), e = 0; e < u.length; e++) u[e].classList.remove("container"), u[e].classList.add("container-fluid");
        function t(a) {
          a.setAttribute("style", "display: none !important");
        }
      }
    }
  }(b.navPosition), e = b.sidebarColor, c && ("default" == e ? (c.classList.remove("navbar-dark", "bg-vibrant"), c.classList.add("navbar-light")) : "vibrant" == e && (c.classList.remove("navbar-light"), c.classList.add("navbar-dark", "bg-vibrant"))), t = n, o = b.colorScheme, r = b.navPosition, l = b.sidebarColor, $(t).find('[name="colorScheme"][value="' + o + '"]').closest(".btn").button("toggle"), $(t).find('[name="navPosition"][value="' + r + '"]').closest(".btn").button("toggle"), $(t).find('[name="sidebarColor"][value="' + l + '"]').closest(".btn").button("toggle"), document.body.style.display = "block", n && n.addEventListener("submit", function(a) {
    var e, t, o, r;
    a.preventDefault(), t = (e = n).querySelector('[name="colorScheme"]:checked').value, o = e.querySelector('[name="navPosition"]:checked').value, r = e.querySelector('[name="sidebarColor"]:checked').value, localStorage.setItem("dashkitColorScheme", t), localStorage.setItem("dashkitNavPosition", o), localStorage.setItem("dashkitSidebarColor", r), window.location = window.location.pathname
  })
}();

//
// Charts ==================================
//
/*
var DashboardChart = (function() {
  var $dashboardChart, $chart, $dataJSON;
  $chart = $('[data-toggle="chart"]');
  $dataJSON = $chart.eq(0).attr("data-update");
  if (typeof $dataJSON === "undefined") {
    $dataJSON = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  }
  else {
    $dataJSON = jQuery.parseJSON($dataJSON).data.datasets[0].data;
  }
  var a, t = $("#dashboardChart");
  t.length && (a = t, $dashboardChart = new Chart(a, {
    type: "line",
    options: {
      scales: {
        yAxes: [{
          gridLines: {
            color: ThemeCharts.colors.gray[900],
            zeroLineColor: ThemeCharts.colors.gray[900]
          },
          ticks: {
            callback: function(a) {
              if (!(a % 10)) return a
            }
          }
        }]
      },
      tooltips: {
        callbacks: {
          label: function(a, $dashboardChart) {
            var t = $dashboardChart.datasets[a.datasetIndex].label || "",
            o = a.yLabel,
            r = "";
            return 1 < $dashboardChart.datasets.length && (r += '<span class="popover-body-label mr-auto">' + t + "</span>"), r += '<span class="popover-body-value">' + o + "</span>"
          }
        }
      }
    },
    data: {
      labels: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
      datasets: [{
        label: "İstatistik",
        data: $dataJSON
      }]
    }
  }), a.data("chart", $dashboardChart));
})();
*/

//
// Switch ==================================
//

var Switch = (function() {
  var $switch = $(".custom-switch .custom-control-input");
  // Init
  function init($switch) {
    var $inputSwitch = $switch.prev();
    if ($switch.prop("checked") == false) {
      $inputSwitch.attr("value", 0);
    }
    else {
      $inputSwitch.attr("value", 1);
    }
  }
  if ($switch.length) {
    $switch.each(function() {
      init($(this));
    });
  }
  $switch.change(function() {
    init($(this));
  });
})();

function changeSwitch($switch, $status) {
  // Init
  function init($switch) {
    var $inputSwitch = $switch.prev();
    if ($status == 0) {
      $inputSwitch.attr("value", 0);
      $switch.prop("checked", false);
    }
    else if ($status == 1) {
      $inputSwitch.attr("value", 1);
      $switch.prop("checked", true);
    }
    else {
      $inputSwitch.attr("value", 0);
      $switch.prop("checked", false);
    }
  }
  if ($switch.length) {
    $switch.each(function() {
      init($(this));
    });
  }
}

//
// IconPicker ==================================
//

var IconPicker = (function() {
  var $iconpicker = $('[data-toggle="iconpicker"]');
  var $inputIcon = $("#inputIcon");

  // Select //
  $iconpicker.on("change", function(event) {
    $inputIcon.val(event.icon);
  });

  // Init
  function init($iconpicker) {
    var $options = {
      cols: 5,
      rows: 5,
      align: 'center',
      placement: 'bottom',
      icon: 'fa-500px',
      iconset: 'fontawesome4',
      iconsetVersion: "4.7.0",
      arrowClass: 'btn-primary',
      arrowPrevIconClass: 'fa fa-angle-left',
      arrowNextIconClass: 'fa fa-angle-right',
      header: true,
      labelHeader: '{0}/{1}',
      search: true,
      searchText: 'Arama Yap',
      selectedClass: 'btn-success',
      unselectedClass: '',
      footer: false
    }
    $iconpicker.iconpicker($options);
  }

  if ($iconpicker.length) {
    $iconpicker.each(function() {
      init($(this));
    });
  }
})();

//
// Nestable2 ==================================
//


var Nestable2 = (function() {
  var $nestable = $('[data-toggle="nestable"]');
  var $actionInsert = $('[data-action="insert"]');
  var $actionUpdate = $('[data-action="update"]');
  var $actionCancel = $('[data-action="cancel"]');
  var $actionEdit = $('[data-action="edit"]');
  var $actionDelete = $('[data-action="delete"]');
  var $iconpicker = $('[data-toggle="iconpicker"]');

  // Uniqid
  function uniqid() {
    var $hash = md5(new Date().getTime());
    return $hash;
  }

  // Build Item
  function buildItem($item) {
    var $html = '<li class="dd-item" data-id="' + $item.id + '" data-title="' + $item.title + '" data-icon="' + $item.icon + '" data-url="' + $item.url + '" data-tabstatus="' + $item.tabstatus + '" data-pagetype="' + $item.pagetype + '">';
    $html += '<div class="dd-handle"><div class="row align-items-center"><div class="col"><div class="dd-content"><i class="' + $item.icon + '"></i> ' + $item.title + '</div></div></div></div><div class="dd-actions"><button type="button" class="btn btn-sm btn-rounded-circle btn-success mr-1" data-action="edit" data-target="' + $item.id + '"><i class="fe fe-edit-2"></i></button><button type="button" class="btn btn-sm btn-rounded-circle btn-danger" data-action="delete" data-target="' + $item.id + '"><i class="fe fe-trash-2"></i></button></div>';
    if ($item.children) {
      $html += '<ol class="dd-list">';
      $.each($item.children, function ($index, $sub) {
        $html += buildItem($sub);
      });
      $html += '</ol>';
    }
    $html += '</li>';
    return $html;
  }

  // Insert Item
  function insertItem($item) {
    var $html = '<li class="dd-item" data-id="' + $item.id + '" data-title="' + $item.title + '" data-icon="' + $item.icon + '" data-url="' + $item.url + '" data-tabstatus="' + $item.tabstatus + '" data-pagetype="' + $item.pagetype + '">';
    $html += '<div class="dd-handle"><div class="row align-items-center"><div class="col"><div class="dd-content"><i class="' + $item.icon + '"></i> ' + $item.title + '</div></div></div></div><div class="dd-actions"><button type="button" class="btn btn-sm btn-rounded-circle btn-success mr-1" data-action="edit" data-target="' + $item.id + '"><i class="fe fe-edit-2"></i></button><button type="button" class="btn btn-sm btn-rounded-circle btn-danger" data-action="delete" data-target="' + $item.id + '"><i class="fe fe-trash-2"></i></button></div></li>';
    return $html;
  }

  function updateJSON($jsonValue) {
    $('input[name="json"]').val($jsonValue);
  }

  // Init
  function init($nestable) {
    var $options = {
      maxDepth: 2
    }
    var $nestableJSON = $('input[name="json"]').val();
    var output = '<ol class="dd-wrapper dd-list">';
    $.each(JSON.parse($nestableJSON), function ($index, $item) {
      output += buildItem($item);
    });
    output += '</ol>';
    $nestable.html(output);
    $nestable.nestable($options);
  }
  if ($nestable.length) {
    $nestable.each(function() {
      init($(this));
    });
  }

  // Clear Form
  function clearForm(form) {
    form.find('input[name="pagetype"]').val("custom");
    form.find('select[name="pageTypeList"]').val("custom").trigger("change");
    form.find('input[name="title"]').val(null);
    form.find('input[name="icon"]').val(null);
    form.find('input[name="url"]').val(null);
    form.find('select[name="tabstatus"]').val(0).trigger("change");
    form.find('[data-action="cancel"]').css("display", "none");
    form.find('[data-action="update"]').attr("data-target", null).css("display", "none");
    form.find('[data-action="insert"]').css("display", "inline-block");
    $iconpicker.iconpicker("setIcon", "fa-500px");
  }

  // Insert Action
  $actionInsert.on("click", function() {
    var form = $(this).parents("#formNestable");
    var idValue = uniqid();
    var titleValue = form.find('input[name="title"]').val();
    var iconValue = "fa " + form.find('input[name="icon"]').val();
    var urlValue = form.find('input[name="url"]').val();
    var tabStatusValue = form.find('select[name="tabstatus"]').val();
    var pageTypeValue = form.find('input[name="pagetype"]').val();
    var $json = {
      id: idValue,
      title: titleValue,
      icon: iconValue,
      url: urlValue,
      tabstatus: tabStatusValue,
      pagetype: pageTypeValue
    };
    $nestable.find(".dd-wrapper").append(insertItem($json));
    clearForm(form);
  });

  // Update Action
  $actionUpdate.on("click", function() {
    var form = $("#formNestable");
    var $id = $(this).attr("data-target");
    var $nestableItem = $('.dd-item[data-id="' + $id + '"]');
    $nestableItem.find(".dd-content").html('<i class="fa ' + form.find('input[name="icon"]').val() + '"></i> ' + form.find('input[name="title"]').val());
    $nestableItem.attr("data-pagetype", form.find('input[name="pagetype"]').val());
    $nestableItem.attr("data-title", form.find('input[name="title"]').val());
    $nestableItem.attr("data-icon", 'fa ' + form.find('input[name="icon"]').val());
    $nestableItem.attr("data-url", form.find('input[name="url"]').val());
    $nestableItem.attr("data-tabstatus", form.find('select[name="tabstatus"]').val());
    clearForm(form);
    updateJSON(JSON.stringify($nestable.nestable("serialize")));
  });

  // Cancel Action
  $actionCancel.on("click", function() {
    var form = $("#formNestable");
    clearForm(form);
  });

  // Edit Action
  $(document).on("click", '[data-action="edit"]', function() {
    var form = $("#formNestable");
    var $id = $(this).attr("data-target");
    var $nestableItem = $('.dd-item[data-id="' + $id + '"]');
    form.find('input[name="pagetype"]').val($nestableItem.attr("data-pagetype"));
    form.find('select[name="pageTypeList"]').val($nestableItem.attr("data-pagetype")).trigger("change");
    form.find('input[name="title"]').val($nestableItem.attr("data-title"));
    form.find('input[name="icon"]').val($nestableItem.attr("data-icon"));
    form.find('input[name="url"]').val($nestableItem.attr("data-url"));
    form.find('select[name="tabstatus"]').val($nestableItem.attr("data-tabstatus")).trigger("change");
    form.find('[data-action="cancel"]').css("display", "inline-block");
    form.find('[data-action="update"]').attr("data-target", $id).css("display", "inline-block");
    form.find('[data-action="insert"]').css("display", "none");
    $iconpicker.iconpicker("setIcon", $nestableItem.attr("data-icon").replace("fa ", ""));
  });


  // Delete Action
  $(document).on("click", '[data-action="delete"]', function() {
    var id = $(this).attr("data-target");
    $nestable.nestable("remove", id);
  });

  // Nestable HTML Change Event
  $(document).on('DOMSubtreeModified', ".dd", function() {
      updateJSON(JSON.stringify($nestable.nestable("serialize")));
  });
})();

//
// TableItems ==================================
//

var TableItems = (function() {
  var $tableitems = $("#tableitems");
  // Init
  function init($tableitems) {
    $tableitems.tableitems();
  }
  if ($tableitems.length) {
    $tableitems.each(function() {
      init($(this));
    });
  }
})();

//
// JSTree ==================================
//

var JSTree = (function() {
  var $jstree = $('[data-toggle="jstree"]');
  var $jstreeSearch = $('[data-toggle="jstree-search"]');
  var $jstreeValue = $('[data-toggle="jstree-value"]');
  var $jstreeJSON = $jstree.attr("json");
  var $timeout = false;
  // Init
  function init($jstree) {
    var $theme;
    if (localStorage.getItem("dashkitColorScheme") == "light") {
      $theme = "default";
    }
    else if (localStorage.getItem("dashkitColorScheme") == "dark") {
      $theme = "default-dark";
    }
    else {
      $theme = "default";
    }
    var $options = {
      core: {
        themes: {
          name: $theme
        },
        strings: {"Loading ...": "Yükleniyor..."},
        multiple: true,
        animation: 0,
        data: {
          url: $jstreeJSON,
          dataType: "json"
        }
      },
      types: {
        server: {
          icon: "fe fe-server"
        },
        category: {
          icon: "fe fe-folder"
        },
        product: {
          icon: "fe fe-tag"
        }
      },
      plugins: ["types", "checkbox", "sort", "search"]
    }
    $jstree.jstree($options);
    $jstreeSearch.keyup(function () {
      if($timeout) {
        clearTimeout($timeout);
      }
      $timeout = setTimeout(function () {
        var $value = $jstreeSearch.val();
        $jstree.jstree(true).search($value);
      }, 250);
    });
    $jstree.on("changed.jstree", function (e, data) {
      var i, j, r = [];
      for(i = 0, j = data.selected.length; i < j; i++) {
        if (data.instance.get_node(data.selected[i]).type == "product") {
          r.push(data.instance.get_node(data.selected[i]).id);
        }
      }
      $jstreeValue.val(r.join(','));
    });
    if ($jstreeValue.val()) {
      $jstree.on("ready.jstree", function (e, data, selected, event) {
        var ref = $jstree.jstree(true);
        ref.close_all();
        ref.deselect_all(true);
        ref.select_node([$jstreeValue.val().split(",")]);
      });
    }
  }
  if ($jstree.length) {
    $jstree.each(function() {
      init($(this));
    });
  }
})();

//
// ClickDelete ==================================
//

var ClickDelete = (function() {
  var $clickdelete = $(".clickdelete");
  // Init
  function init($clickdelete) {
    $clickdelete.on("click", function() {
      return confirm("Silmek istediğinize emin misiniz?");
    });
  }
  if ($clickdelete.length) {
    $clickdelete.each(function() {
      init($(this));
    });
  }
})();

//
// Disabled Links ==================================
//

var DisabledLink = (function() {
  var $disabledlink = $(".disabledlink");
  // Init
  function init($disabledlink) {
    $disabledlink.on("click", function(e) {
      e.preventDefault();
    });
  }
  if ($disabledlink.length) {
    $disabledlink.each(function() {
      init($(this));
    });
  }
})();

//
// TagsInput ==================================
//


var TagsInput = (function() {
  var $tags = $('[data-toggle="tagsinput"]');
  // Init
  function init($tags) {
    var $options = {
      tagClass: 'tag-box',
      focusClass: 'tag-input-focus'
    }
    $tags.tagsinput($options);
  }
  if ($tags.length) {
    $tags.each(function() {
      init($(this));
    });
  }
})();

//
// Froala Editor ==================================
//

var FroalaEditor = (function() {
  var $textEditor = $('[data-toggle="textEditor"]');
  var $placeholder = $textEditor.attr("placeholder");

  // Init
  function init($textEditor) {
    var $theme;
    if (localStorage.getItem("dashkitColorScheme") == "light") {
      $theme = "default";
    }
    else if (localStorage.getItem("dashkitColorScheme") == "dark") {
      $theme = "dark";
    }
    else {
      $theme = "default";
    }
    var $options = {
      language: "tr",
      theme: $theme,
      heightMin: 150,
      heightMax: 300,
      toolbarSticky: false,
      toolbarButtons: ['paragraphFormat', 'fontFamily', 'fontSize', 'color', 'bold', 'italic', 'underline', 'strikeThrough', '|', 'align', 'formatOL', 'formatUL', 'quote', 'insertLink', 'insertImage', 'insertVideo', 'embedly', 'insertTable', '|', 'emoticons', 'insertHR', 'clearFormatting', 'spellChecker', 'help', 'html', '|', 'undo', 'redo'],
      placeholderText: $placeholder,
      imageUploadURL: '/apps/dashboard/public/ajax/froalaeditor.php?target=image&action=upload'
    };
    $textEditor.froalaEditor($options);
  }
  if ($textEditor.length) {
    $textEditor.each(function() {
      init($(this));
    });
  }
})();

//
// Code Mirror ==================================
//

var CodeMirror = (function() {
  var $codeEditor = $('[data-toggle="codeEditor"]');

  // Init
  function init($codeEditor) {
    var $theme;
    if (localStorage.getItem("dashkitColorScheme") == "light") {
      $theme = "default";
    }
    else if (localStorage.getItem("dashkitColorScheme") == "dark") {
      $theme = "material";
    }
    else {
      $theme = "default";
    }
    var $options = {
      mode: "css",
      theme: $theme,
      lineNumbers: true
    };
    var $codeMirror = CodeMirror.fromTextArea($codeEditor.get(0), $options);
  }
  if ($codeEditor.length) {
    $codeEditor.each(function() {
      init($(this));
    });
  }
})();

//
// Color Picker ==================================
//

var ColorPicker = (function() {
  var $colorPicker = $('[data-toggle="colorPicker"]');

  // Init
  function init($colorPicker) {
    var $options = {
      customClass: 'colorpicker-2x',
      sliders: {
        saturation: {
          maxLeft: 200,
          maxTop: 200
        },
        hue: {
          maxTop: 200
        },
        alpha: {
          maxTop: 200
        }
      },
      colorSelectors: {
        'black': '#000000',
        'white': '#ffffff',
        'default': '#172b4d',
        'primary': '#5e72e4',
        'success': '#2dce89',
        'info': '#11cdef',
        'warning': '#fb6340',
        'danger': '#f5365c'
      }
    };
    $colorPicker.colorpicker($options);
  }
  if ($colorPicker.length) {
    $colorPicker.each(function() {
      init($(this));
    });
  }
})();

//
// Drop Image ==================================
//

var DropImage = (function() {
  var $dropimage = $('[data-toggle="dropimage"]');
  // Init
  function init($dropimage) {
    $dropimage.dropImage();
  }
  if ($dropimage.length) {
    $dropimage.each(function() {
      init($(this));
    });
  }
})();

//
// Flatpickr ==================================
//

var Flatpickr = (function() {
  var $flatpickr = $('[data-toggle="flatpickr"]');
  // Init
  function init($flatpickr) {
    if ($flatpickr.attr('data-expirydate') == 'true') {
      var $options = {
        locale: "tr",
        enableTime: true,
        dateFormat: "Y-m-d H:i",
        time_24hr: true,
        minDate: "today",
        defaultDate: ($flatpickr.attr('value')) ? $flatpickr.attr('value') : null
      };
    }
    else {
      var $options = JSON.parse($flatpickr.attr('data-options'));
    }
    $flatpickr.flatpickr($options);
  }
  if ($flatpickr.length) {
    $flatpickr.each(function() {
      init($(this));
    });
  }
})();

//
// ServerOnline ==================================
//

var ServerOnline = (function() {
  var $onlineText = $('[data-toggle="onlinetext"]');
  // Init
  function init($onlineText) {
    var $serverIP = $onlineText.attr("server-ip").split(':', 2);

    if ($onlineAPI == 1) {
      var $ajaxURL = "https://mcapi.us/server/status?ip=" + $serverIP[0] + (($serverIP[1]) ? "&port=" + $serverIP[1] : "");
    }
    else if ($onlineAPI == 2) {
      var $ajaxURL = "https://eu.mc-api.net/v3/server/ping/" + $serverIP[0] + (($serverIP[1]) ? ":" + $serverIP[1] : "");
    }
    else if ($onlineAPI == 3) {
      var $ajaxURL = "https://mcapi.tc/?" + $serverIP[0] + "/json";
    }
    else if ($onlineAPI == 4) {
      var $ajaxURL = "https://api.keyubu.net/mc/ping.php?ip=" + $serverIP[0] + ":" + (($serverIP[1]) ? $serverIP[1] : "25565");
    }
    else if ($onlineAPI == 5) {
      var $ajaxURL = "https://api.mcsrvstat.us/2/" + $serverIP[0] + (($serverIP[1]) ? ":" + $serverIP[1] : "");
    }
    else if ($onlineAPI == 6) {
      var $ajaxURL = "https://api.mcsrvstat.us/2/" + $serverIP[0] + ":" + (($serverIP[1]) ? $serverIP[1] : "19132");
    }
    else {
      var $ajaxURL = "https://mcapi.us/server/status?ip=" + $serverIP[0] + (($serverIP[1]) ? "&port=" + $serverIP[1] : "");
    }
    $.ajax({
      url: $ajaxURL,
      dataType: "json",
      success: function(data) {
        if ($onlineAPI == 1) {
          var onlineStatus = data["online"];
          var online = data["players"]["now"];
        }
        else if ($onlineAPI == 2) {
          var onlineStatus = data["online"];
          var online = data["players"]["online"];
        }
        else if ($onlineAPI == 3) {
          var onlineStatus = data["status"];
          var online = data["players"];
        }
        else if ($onlineAPI == 4) {
          var onlineStatus = data["online"];
          var online = data["players"]["online"];
        }
        else if ($onlineAPI == 5) {
          var onlineStatus = data["online"];
          var online = data["players"]["online"];
        }
        else if ($onlineAPI == 6) {
          var onlineStatus = data["online"];
          var online = data["players"]["online"];
        }
        else {
          var onlineStatus = data["online"];
          var online = data["players"]["now"];
        }

        if (onlineStatus == true || ($onlineAPI == 3 && onlineStatus != "offline")) {
          $onlineText.text(online);
        }
        else {
          $onlineText.text("0");
        }
      }
    });
  }
  if ($onlineText.length) {
    $onlineText.each(function() {
      init($(this));
    });
  }
})();

//
// LazyLoad ==================================
//

var lazyLoader = new LazyLoad({
  elements_selector: ".lazyload"
});

/* CONSOLE MESSAGE */
var consoleCopyrightStyle = [
  "margin: 16px 0",
  "border-radius: 10px"
].join(";");
var consoleWarningHeaderStyle = [
  "color: #ff0000",
  "font-size: 32px",
  "font-weight: 600",
  "margin: 8px 0"
].join(";");
var consoleWarningContentStyle = [
  "background-color: #ff0000",
  "color: #ffffff",
  "padding: 20px",
  "border-radius: 10px"
].join(";");
console.log(
  "%cDUR!"+
  "%cBu alan geliştiricilere özel bir tarayıcı özelliğidir. Birisi size buraya bir şey kopyalayıp yapıştırmanızı söylerse, bu bir aldatmacadır ve sitenizdeki hesabınıza erişmesine izin verir. Lütfen buraya başkasının verdiği bir kodu girmeyiniz!"+
  `%cTelif Hakkı © ${new Date().getFullYear()} RIVA STUDIOS YAZILIM SİSTEMLERİ  | Tüm hakları saklıdır.`,
  consoleWarningHeaderStyle,
  consoleWarningContentStyle,
  consoleCopyrightStyle
);
